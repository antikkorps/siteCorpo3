---
import HeaderLink from './HeaderLink.astro';
import TopBanner from './TopBanner.astro';
import Icon from './Icon.astro';
import { getParametresSite, getImageUrl } from '../lib/directus';

const parametres = await getParametresSite();
---

<TopBanner />
<header id="header" class="mvo-bg-white shadow-lg sticky top-0 z-50 transition-transform duration-300 w-full">
	<div class="w-full px-4 lg:px-8">
		<nav class="flex items-center justify-between py-6 max-w-7xl mx-auto">
			<!-- Logo -->
			<div class="flex items-center flex-shrink-0">
				<a href="/" class="flex items-center space-x-3">
					{parametres?.logo ? (
						<img 
							src={getImageUrl(parametres.logo, 150, 50)} 
							alt={parametres.titre || 'MVO Stérilisation'}
							class="h-16 w-auto"
						/>
					) : (
						<img 
							src="/assets/logos/MVO_XXL_Quadri.svg" 
							alt="MVO Stérilisation"
							class="h-16 w-auto"
						/>
					)}
				</a>
			</div>

			<!-- Desktop Navigation -->
			<div class="hidden lg:flex items-center space-x-8">
				<HeaderLink href="/">
					<Icon name="home" size={20} />
				</HeaderLink>
				
				<HeaderLink href="/expertise-metier">Expertise Métier</HeaderLink>
				<HeaderLink href="/audit-accompagnement">Audit & Accompagnement</HeaderLink>
				<HeaderLink href="/sterilisation-logistique">Stérilisation & Logistique</HeaderLink>
				<HeaderLink href="/logibop">Logibop</HeaderLink>
				<HeaderLink href="/formation">Formation</HeaderLink>
				<a href="/contact" class="btn-contact ml-4">
					Nous contacter
				</a>
			</div>

			<!-- Mobile Menu Button -->
			<button 
				id="mobile-menu-button"
				class="lg:hidden p-2 rounded-lg hover:mvo-bg-gray-100 transition-colors flex-shrink-0"
				aria-label="Menu"
			>
				<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
				</svg>
			</button>
		</nav>

		<!-- Mobile Navigation -->
		<div id="mobile-menu" class="lg:hidden hidden pb-4">
			<div class="flex flex-col space-y-4 max-w-7xl mx-auto">
				<a href="/" class="mvo-text-gray-700 hover:mvo-text-primary font-medium transition-colors flex items-center space-x-2">
					<Icon name="home" size={20} />
					<span>Accueil</span>
				</a>
				
				<a href="/expertise-metier" class="mvo-text-gray-700 hover:mvo-text-primary font-medium transition-colors">
					Expertise Métier
				</a>
				<a href="/audit-accompagnement" class="mvo-text-gray-700 hover:mvo-text-primary font-medium transition-colors">
					Audit & Accompagnement
				</a>
				<a href="/sterilisation-logistique" class="mvo-text-gray-700 hover:mvo-text-primary font-medium transition-colors">
					Stérilisation & Logistique
				</a>
				<a href="/logibop" class="mvo-text-gray-700 hover:mvo-text-primary font-medium transition-colors">
					Logibop
				</a>
				<a href="/formation" class="mvo-text-gray-700 hover:mvo-text-primary font-medium transition-colors">
					Formation
				</a>
				<a href="/contact" class="mvo-text-gray-700 hover:mvo-text-primary font-medium transition-colors">
					Nous contacter
				</a>
			</div>
		</div>
	</div>
</header>

<script>
	const mobileMenuButton = document.getElementById('mobile-menu-button');
	const mobileMenu = document.getElementById('mobile-menu');
	const header = document.getElementById('header');

	// Variables pour le scroll
	let lastScrollTop = 0;
	let isScrolling = false;

	// Gestion du menu mobile
	mobileMenuButton?.addEventListener('click', () => {
		mobileMenu?.classList.toggle('hidden');
	});

	// Fonction pour gérer le scroll
	function handleScroll() {
		if (isScrolling) return;
		
		isScrolling = true;
		
		const currentScrollTop = window.pageYOffset || document.documentElement.scrollTop;
		
		// Masquer/afficher la navigation selon la direction du scroll
		if (currentScrollTop > lastScrollTop && currentScrollTop > 100) {
			// Scroll vers le bas - masquer la navigation
			header?.classList.add('-translate-y-full');
		} else if (currentScrollTop < lastScrollTop) {
			// Scroll vers le haut - afficher la navigation
			header?.classList.remove('-translate-y-full');
		}
		
		lastScrollTop = currentScrollTop;
		
		// Délai pour éviter trop d'appels
		setTimeout(() => {
			isScrolling = false;
		}, 100);
	}

	// Écouter les événements de scroll
	window.addEventListener('scroll', handleScroll, { passive: true });
</script>
