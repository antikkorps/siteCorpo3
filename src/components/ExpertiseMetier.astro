---
// Composant ExpertiseMetier réutilisable
export interface Props {
	title?: string;
	subtitle?: string;
	description?: string;
	ctaText?: string;
	ctaLink?: string;
	features?: Array<{
		icon: string;
		title: string;
		color: 'blue' | 'green' | 'orange' | 'purple';
	}>;
}

const {
	title = "Expertise métier",
	subtitle = "Solutions complètes de stérilisation",
	description = "MVO dispose de compétences complètes pour vous proposer des solutions de stérilisation clés en main. De la conception et du suivi de projet à l'organisation efficace, en passant par la conduite du changement, la formation des équipes, la mise en place du système de management de la qualité, l'informatisation et l'accompagnement des ateliers avec les blocs opératoires.",
	ctaText = "En savoir plus",
	ctaLink = "/expertise-metier",
	features = [
		{
			icon: "star",
			title: "Qualité de service",
			color: "blue"
		},
		{
			icon: "checklist",
			title: "Maîtrise des process",
			color: "green"
		},
		{
			icon: "integration",
			title: "Sur-mesure",
			color: "orange"
		},
		{
			icon: "manager",
			title: "Valeurs humaines",
			color: "purple"
		}
	]
} = Astro.props;

import Icon from './Icon.astro';
---

<section class="py-20 bg-gray-50 animate-on-scroll">
	<div class="container mx-auto px-4 max-w-7xl">
		<div class="bg-white rounded-3xl overflow-hidden shadow-2xl">
			
			<!-- Section gauche - Contenu principal -->
			<div class="lg:grid lg:grid-cols-3">
				<div class="lg:col-span-2 p-8 lg:p-12 mvo-gradient text-white relative animate-section">
					<!-- Élément décoratif vertical -->
					<div class="absolute left-0 top-0 w-2 h-full bg-gradient-to-b from-mvo-accent to-mvo-primary"></div>
					
					<div class="relative z-10">
						<h2 class="text-4xl lg:text-5xl font-bold mb-6 leading-tight animate-text">
							{title}
						</h2>
						<h3 class="text-xl lg:text-2xl font-medium mb-8 text-blue-100 animate-text">
							{subtitle}
						</h3>
						<p class="text-lg leading-relaxed text-blue-50 mb-10 max-w-3xl animate-text">
							{description}
						</p>
						<a href={ctaLink} class="inline-flex items-center bg-white text-mvo-primary px-8 py-4 rounded-xl font-semibold hover:bg-blue-50 transition-all duration-300 transform hover:scale-105 shadow-lg animate-buttons">
							{ctaText}
							<svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
							</svg>
						</a>
					</div>

					<!-- Éléments décoratifs en arrière-plan -->
					<div class="absolute top-10 right-10 w-32 h-32 bg-mvo-accent rounded-full opacity-20 animate-icons"></div>
					<div class="absolute bottom-10 right-20 w-24 h-24 bg-mvo-primary rounded-full opacity-20 animate-icons"></div>
				</div>

				<!-- Section droite - Grille de features -->
				<div class="lg:col-span-1 bg-gray-50 p-8 lg:p-12 flex items-center animate-section-right">
					<div class="grid grid-cols-2 gap-6 w-full animate-cards">
						{features.map((feature, index) => (
							<div class="text-center group">
								<!-- Forme organique en arrière-plan -->
								<div class={`relative w-20 h-20 mx-auto mb-4 group-hover:scale-110 transition-transform duration-300 ${
									feature.color === 'blue' ? 'bg-mvo-primary-light' :
									feature.color === 'green' ? 'bg-mvo-green-light' :
									feature.color === 'orange' ? 'bg-mvo-accent-light' :
									'bg-mvo-secondary-light'
								} rounded-full flex items-center justify-center animate-icons`}>
									
									{/* Forme organique irrégulière */}
									<div class={`absolute inset-2 rounded-full opacity-60 ${
										feature.color === 'blue' ? 'bg-mvo-primary-20' :
										feature.color === 'green' ? 'bg-mvo-green-20' :
										feature.color === 'orange' ? 'bg-mvo-accent-20' :
										'bg-mvo-secondary-20'
									} transform rotate-12 scale-90 group-hover:rotate-0 group-hover:scale-100 transition-all duration-300`}></div>
									
									{/* Icône */}
									<div class={`relative z-10 ${
										feature.color === 'blue' ? 'text-mvo-primary' :
										feature.color === 'green' ? 'text-mvo-green' :
										feature.color === 'orange' ? 'text-mvo-accent' :
										'text-mvo-secondary'
									}`}>
										<Icon name={feature.icon} size={32} />
									</div>
								</div>
								
								<h4 class="text-sm font-semibold text-gray-700 group-hover:text-gray-900 transition-colors duration-300 animate-text">
									{feature.title}
								</h4>
							</div>
						))}
					</div>
				</div>
			</div>
		</div>
	</div>
</section> 