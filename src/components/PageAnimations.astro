---
// Composant pour les animations de page avec GSAP
---

<script>
	import { gsap } from 'gsap';
import { ScrollTrigger } from 'gsap/ScrollTrigger';

	// Enregistrer les plugins GSAP
	gsap.registerPlugin(ScrollTrigger);

	// Animation d'entrée de page
	function initPageAnimations() {
		// Animation du hero
		const heroTl = gsap.timeline();
		
		// Animation du titre principal
		heroTl.from('.hero-title', {
			duration: 1,
			y: 50,
			opacity: 0,
			ease: 'power3.out'
		})
		.from('.hero-subtitle', {
			duration: 0.8,
			y: 30,
			opacity: 0,
			ease: 'power3.out'
		}, '-=0.5')
		.from('.hero-cta', {
			duration: 0.6,
			y: 20,
			opacity: 0,
			ease: 'power3.out'
		}, '-=0.3');

		// Animation des sections au scroll
		gsap.from('.animate-on-scroll', {
			duration: 0.8,
			y: 50,
			opacity: 0,
			ease: 'power3.out',
			stagger: 0.2,
			scrollTrigger: {
				trigger: '.animate-on-scroll',
				start: 'top 80%',
				end: 'bottom 20%',
				toggleActions: 'play none none reverse'
			}
		});

		// Animation des cartes en cascade
		gsap.from('.animate-cards .card, .animate-cards .stat-item', {
			duration: 0.6,
			y: 40,
			opacity: 0,
			stagger: 0.1,
			ease: 'power3.out',
			scrollTrigger: {
				trigger: '.animate-cards',
				start: 'top 80%',
				end: 'bottom 20%',
				toggleActions: 'play none none reverse'
			}
		});

		// Animation des icônes
		gsap.from('.animate-icons .w-16, .animate-icons .w-12', {
			duration: 0.8,
			scale: 0,
			rotation: 180,
			ease: 'back.out(1.7)',
			stagger: 0.1,
			scrollTrigger: {
				trigger: '.animate-icons',
				start: 'top 80%',
				end: 'bottom 20%',
				toggleActions: 'play none none reverse'
			}
		});

		// Animation du texte avec slide in/out
		gsap.from('.animate-text', {
			duration: 1,
			x: -100,
			opacity: 0,
			ease: 'power3.out',
			stagger: 0.2,
			scrollTrigger: {
				trigger: '.animate-text',
				start: 'top 80%',
				end: 'bottom 20%',
				toggleActions: 'play none none reverse'
			}
		});

		// Animation de Section
		gsap.fromTo('.animate-section', 
			{
				x: -50,
				opacity: 0
			},
			{
				duration: 0.8,
				x: 0,
				opacity: 1,
				ease: 'power3.out',
				stagger: 0.2,
				scrollTrigger: {
					trigger: '.animate-section',
					start: 'top 70%',
					end: 'bottom 20%',
					toggleActions: 'play reverse play reverse',
					markers: false
				}
			}
		);

    // Animation de Section no reverse
    gsap.fromTo('.animate-section-no-reverse', 
      {
        x: 50,
        opacity: 0
      },
      {
        duration: 0.8,
        x: 0,
        opacity: 1,
        ease: 'power3.out',
        stagger: 0.2,
        scrollTrigger: {
          trigger: '.animate-section',
          start: 'top 70%',
          end: 'bottom 20%',
          toggleActions: 'play none none none',
          markers: false
        }
      }
    );

		// Animation des barres de progression
		gsap.from('.animate-progress .progress-bar', {
			duration: 1.5,
			width: '0%',
			ease: 'power2.out',
			scrollTrigger: {
				trigger: '.animate-progress',
				start: 'top 80%',
				end: 'bottom 20%',
				toggleActions: 'play none none reverse'
			}
		});

		// Animation des images
		gsap.from('.animate-images img', {
			duration: 1,
			scale: 1.1,
			opacity: 0,
			ease: 'power3.out',
			stagger: 0.2,
			scrollTrigger: {
				trigger: '.animate-images',
				start: 'top 80%',
				end: 'bottom 20%',
				toggleActions: 'play none none reverse'
			}
		});

		// Animation des boutons
		gsap.from('.animate-buttons a, .animate-buttons button', {
			duration: 0.6,
			y: 20,
			opacity: 0,
			ease: 'power3.out',
			stagger: 0.1,
			scrollTrigger: {
				trigger: '.animate-buttons',
				start: 'top 80%',
				end: 'bottom 20%',
				toggleActions: 'play none none reverse'
			}
		});
	}

	// Animation de sortie de page (pour les transitions)
	function pageExitAnimation() {
		return gsap.to('main', {
			duration: 0.3,
			opacity: 0,
			y: -20,
			ease: 'power3.in'
		});
	}

	// Animation d'entrée de page
	function pageEnterAnimation() {
		return gsap.from('main', {
			duration: 0.5,
			opacity: 0,
			y: 20,
			ease: 'power3.out'
		});
	}

	// Initialiser les animations quand le DOM est prêt
	document.addEventListener('DOMContentLoaded', () => {
		// Animation d'entrée de page
		pageEnterAnimation();
		
		// Initialiser les animations de scroll
		initPageAnimations();
	});

	// Gestion des transitions de page (pour Astro)
	document.addEventListener('astro:page-load', () => {
		// Nettoyer les ScrollTriggers existants
		ScrollTrigger.getAll().forEach(trigger => trigger.kill());
		
		// Réinitialiser les animations
		setTimeout(() => {
			initPageAnimations();
		}, 100);
	});
</script> 